name: explicit-content-extension
version: 0.0.1
specVersion: v1beta

displayName: Explicit Content Extension

description: >-
  Blurs explicit content.

license: Apache-2.0

sourceUrl: https://github.com/nilsreichardt/explicit-content-extension

author:
  authorName: Nils Reichardt
  url: https://github.com/nilsreichardt

apis:
  - apiName: storage-component.googleapis.com
    reason: Needed to use Cloud Storage to read and write images
  - apiName: firestore.googleapis.com
    reason: Needed to use Cloud Firestore to store results of an image with explicit content
  - apiName: vision.googleapis.com
    reason: Needed to use Cloud Vision API to detect explicit content

roles:
  - role: storage.admin
    reason: Allows the extension to store resized images in Cloud Storage
  - role: datastore.owner
    reason: Allows the extension to delete (user) data from Cloud Firestore.

# Specify whether a paid-tier billing plan is required to use your extension.
# Learn more in the docs: https://firebase.google.com/docs/extensions/reference/extension-yaml#billing-required-field
billingRequired: true

# In an `apis` field, list any Google APIs (like Cloud Translation, BigQuery, etc.)
# required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#apis-field

# In a `roles` field, list any IAM access roles required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#roles-field

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#resources-field
resources:
  - name: explicitContentDetection
    type: firebaseextensions.v1beta.function
    description: >-
      Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images,
      then stores the resized images in the same bucket. Optionally keeps or deletes the original images.
    properties:
      runtime: nodejs18
      availableMemoryMb: ${param:FUNCTION_MEMORY}
      eventTrigger:
        eventType: google.storage.object.finalize
        resource: projects/_/buckets/${param:IMG_BUCKET}

# In the `params` field, set up your extension's user-configured parameters.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#params-field
params:
  - param: IMG_BUCKET
    label: Cloud Storage bucket for images
    description: >
      To which Cloud Storage bucket will you upload images that you want to resize?
      Resized images will be stored in this bucket. Depending on your extension configuration,
      original images are either kept or deleted.
      It is recommended to create a separate bucket for this extension. For more information,
      refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).
    type: selectResource
    resourceType: storage.googleapis.com/Bucket
    example: my-project-12345.appspot.com
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid storage bucket
    default: ${STORAGE_BUCKET}
    required: true

  - param: FUNCTION_MEMORY
    label: Cloud Function memory
    description: >-
      Memory of the function responsible of resizing images. 
      Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).
    type: select
    options:
      - label: 512 MB
        value: 512
      - label: 1 GB
        value: 1024
      - label: 2 GB
        value: 2048
    default: 1024
    required: true
    immutable: false
